/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package mn.micrometer.rxjava3

import io.micrometer.core.annotation.Timed
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Get
import io.micronaut.http.client.annotation.Client
import io.micronaut.runtime.Micronaut
import io.reactivex.rxjava3.core.Flowable
import io.reactivex.rxjava3.core.Single

fun main(args: Array<String>) {
    Micronaut.build()
        .args(*args)
        .packages("mn.micrometer.rxjava3")
        .start()
}

data class Book(val id: Long, val title: String)

interface BookApi {
    @Get("/{id}")
    @Timed
    fun get(id: Long): Single<Book>

    @Get
    @Timed
    fun get(): Flowable<List<Book>>
}

@Client("/books")
interface BookClient: BookApi

@Controller("books")
class BookController: BookApi {
    private val books = mapOf(1L to Book(1, "Test"))
    override fun get(id: Long): Single<Book> {
        return books[id]?.let { Single.just(it) } ?: Single.error(Throwable("not found"))
    }

    override fun get(): Flowable<List<Book>> = Flowable.just(books.values.toList())
}